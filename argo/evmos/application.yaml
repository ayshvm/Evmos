---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: evmos-testnet
  # You'll usually want to add your resources to the argocd namespace.
  namespace: argocd
  # Add this finalizer ONLY if you want these to cascade delete.
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  # Add labels to your application object.
  labels:
    version: "9.1.1"
spec:
  # The project the application belongs to.
  project: evmos-testnet

  # Source of the application manifests
  source:
    repoURL: https://github.com/ayushvtf/evmos   # Can point to either a Helm chart repo or a git repo.
    targetRevision: main  # For Helm, this refers to the chart version.
    path: helm/evmos  # This has no meaning for Helm charts pulled directly from a Helm repo instead of git.
    helm:
      passCredentials: false # If true then adds --pass-credentials to Helm commands to pass credentials to all domains
      # Extra parameters to set (same as setting through values.yaml, but these take precedence)

      # # Helm values files for overriding values in the helm chart
      # # The path is relative to the spec.source.path directory defined above
      valueFiles:
      - values.yaml

      # Values file as block file
      values: |
        deployment:
          replicas: 1
          projectName: evmos-testnet
          namespace: evmos-testnet
          imagename: docker.io/ayushvv/evmos
          imagetag: v16.0.0-rc5
        
        svc:
          clustertype: LoadBalancer
        pvc:
          enabled: true
          storageClassName: standard-rwo
          mount:
          - pvName: pv
            mountPath: /root/.evmosd
            storageSize: 100Gi
        configmap:
          enabled: true
  # Destination cluster and namespace to deploy the application
  destination:
    server: https://172.16.0.2
    # The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
    namespace: evmos-testnet

  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: false # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: false # Allows deleting all application resources during automatic syncing ( false by default ).
    syncOptions:     # Sync options which modifies sync behavior
    - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
    retry:
      limit: 3 # number of failed sync attempt retries; unlimited number of attempts if less than 0
      backoff:
        duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
        factor: 2 # a factor to multiply the base duration after each failed retry
        maxDuration: 3m # the maximum amount of time allowed for the backoff strategy